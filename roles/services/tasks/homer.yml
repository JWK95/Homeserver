---
- name: Make Homer directory
  file:
    path: "{{ docker_directory}}/{{ homer_name | lower }}/"
    owner: "{{ username }}"
    group: "{{ username }}"
    state: directory
    recurse: yes

- name: Copy config template to Homer directory
  template:
    src: ../files/homer/homer-config.yml.j2
    owner: "{{ username }}"
    group: "{{ username }}"
    dest: "{{ docker_directory }}/{{ homer_name | lower }}/config.yml"

- name: Copy image assets to Homer directory
  copy: 
    src: "../files/{{ homer_name | lower }}/assets/"
    owner: "{{ username }}"
    group: "{{ username }}"
    dest: "{{ docker_directory }}/{{ homer_name | lower }}/"

- name: Check the Homer container is created and running
  docker_container:
    name: "{{ homer_name }}"
    hostname: "{{ homer_name | lower }}"
    image: "b4bz/homer"
    pull: true
    state: "started"
    restart_policy: "unless-stopped"
    volumes: 
      - "{{ docker_directory }}/{{ homer_name | lower }}/:/www/assets/"
    labels:
      "traefik.enable": "true"
      "traefik.http.routers.homer_route.entrypoints": "websecure"
      "traefik.http.routers.homer_route.rule": "Host(`{{ homer_name | lower }}.{{ domain }}`)"
      "traefik.http.routers.homer_route.service": "homer_service"
      "traefik.http.routers.homer_route.tls": "true"
      "traefik.http.routers.homer_route.tls.certResolver": "letsencrypt"
      "traefik.http.services.homer_service.loadbalancer.server.port": "{{ homer_port }}"
    networks:
      - name: "{{ docker_network_name }}"