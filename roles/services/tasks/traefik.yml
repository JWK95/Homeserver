---
- name: Create docker networks
  docker_network:
    name: "{{ item }}"
    internal: false
  loop:
    - "{{ docker_network_name }}"
    - socket_proxy

- name: Create certs directory
  file: 
    path: "{{ certs_dir }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    state: directory
    recurse: yes

- name: Check the socket_proxy container is up and running
  docker_container:
    name: "socket_proxy"
    hostname: "socket_proxy"
    image: "tecnativa/docker-socket-proxy:latest"
    pull: true
    state: "started"
    restart_policy: "unless-stopped"
    env:
      NETWORKS: "1"
      SERVICES: "1"
      CONTAINERS: "1"
      TASKS: "1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - name: socket_proxy

- name: Check the Traefik container is up and running
  docker_container:
    name: "{{ traefik_name }}"
    hostname: "{{ traefik_name | lower }}"
    image: "traefik:latest"
    pull: true
    state: "started"
    restart_policy: "unless-stopped"
    command: |
      --providers.docker=true
      --providers.docker.exposedbydefault=false
      --providers.docker.endpoint=tcp://socket_proxy:2375
      --providers.docker.network=traefik_public
      --api.dashboard=true
      --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      --certificatesresolvers.letsencrypt.acme.email={{ certs_email }}
      --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      --entrypoints.web.address=:{{ traefik_port }}
      --entrypoints.web.http.redirections.entrypoint.to=websecure
      --entrypoints.web.http.redirections.entrypoint.scheme=https
      --entrypoints.websecure.address=:443
      --entrypoints.websecure.http.tls=true
      --entrypoints.websecure.http.tls.certResolver=letsencrypt
      --entrypoints.websecure.http.tls.domains[0].main={{ domain }}
      --entrypoints.websecure.http.tls.domains[0].sans=*.{{ domain }}
      --log.level=info
      --log.format=json 
    labels: 
      "traefik.enable": "true"
      "traefik.http.routers.traefik.rule": "Host(`{{ traefik_name | lower }}.{{ domain }}`)"
      "traefik.http.routers.traefik.entrypoints": "websecure"
      "traefik.http.routers.traefik.tls.certResolver": "letsencrypt"
      "traefik.http.routers.traefik.service": "api@internal"
      "traefik.http.routers.traefik.middlewares": "strip"
      "traefik.http.middlewares.strip.stripprefix.prefixes": "/{{ traefik_name | lower }}"
    env:
      CLOUDFLARE_EMAIL: "{{ certs_email }}"
      CLOUDFLARE_DNS_API_TOKEN: "{{ cloudflare_api_token }}"
    ports:
      - "80:{{ traefik_port }}"
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ certs_dir }}:/letsencrypt"
    networks:
      - name: "{{ docker_network_name }}"
      - name: socket_proxy