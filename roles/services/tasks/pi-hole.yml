---
- name: Make Pi-hole directories
  file:
    path: "{{ item }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    state: directory
    recurse: yes
  loop:
    - "{{ docker_directory }}/pi-hole"

- name: Copy custom DNS list
  template:
    src: ../files/pi-hole/hosts.j2
    dest: "{{ docker_directory }}/pi-hole/hosts"

- name: Check the Pi-hole container is up and running
  docker_container:
    name: "pi-hole"
    image: "pihole/pihole"
    pull: true
    state: "started"
    restart_policy: "unless-stopped"
    env:
      "TZ": "GB"
      "WEBPASSWORD": "{{ pihole_webpassword }}"
      "PIHOLE_INTERFACE": "eth0"
      "DNSMASQ_LISTENING": "all"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
    volumes:
      - "{{ docker_directory }}/pi-hole/hosts:/etc/hosts"
    labels:
      "traefik.enable": "true"
      "traefik.http.routers.pihole_route.entrypoints": "websecure"
      "traefik.http.routers.pihole_route.rule": "Host(`pi-hole.local`)"
      "traefik.http.routers.pihole_route.service": "pihole_service"
      "traefik.http.routers.pihole_route.tls": "true"
      "traefik.http.routers.pihole_route.middlewares": "add-context"
      "traefik.http.services.pihole_service.loadbalancer.server.port": "80"
      # Redirect to /admin
      "traefik.http.middlewares.add-context.redirectregex.regex": "^https:\\/\\/([^\\/]+)\\/?$$"
      "traefik.http.middlewares.add-context.redirectregex.replacement": "https://pi-hole.local/admin"
    networks:
      - name: traefik_public  